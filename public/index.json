
[{"content":"","date":"30 July 2024","externalUrl":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github","type":"tags"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_language/html/","section":"貼文","summary":" 中滑 # ","title":"HTML","type":"posts"},{"content":"","date":"30 July 2024","externalUrl":null,"permalink":"/","section":"Mickey Blog","summary":"","title":"Mickey Blog","type":"page"},{"content":"","date":"30 July 2024","externalUrl":null,"permalink":"/tags/obsidian/","section":"Tags","summary":"","title":"Obsidian","type":"tags"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_setting/obsidian/","section":"貼文","summary":" 中滑 # ","title":"Obsidian 黑曜石筆記","type":"posts"},{"content":"Use Obsidian clone github repositories on the Phone and comply git_push git_pull commit.\n1. 安裝Obsidian # 1. Android 用戶 # 到 Google play 下載 Obsidian 並且安裝。\n2. iOS 用戶 # 到 App Store 下載 Obsidian 並且安裝。\n2. 創建一個筆記 # 1. 創建一個新的筆記 # 打開 Obsidian 點選 Create new vault\n2. 筆記設定 # Vault name Obsidian 的筆記名稱 Vault location Obsidian 的筆記儲存位置 3. Obsidian 外掛程式安裝 # 頁面向右滑\n點選右上角的齒輪，進入設定\n點選 第三方外掛程式\n瀏覽 社群外掛程式\n搜尋 Git\n安裝並啟用 Git\n3. Clone Github rerepositories # 在主畫面下滑 開啟命令面板\n輸入以下命令\nGit: Clone an existing remote repo 出現Enter remote URL\n至要複製的 Github 儲存庫 複製 Git URL 然後貼上\n出現Enter directory for clone.\n這是要我們輸入本地目錄，直接下一步就好,不需要田任何東西。\n出現Does your remote repo contain a .obsidian\n這是詢問我們 Github 的儲存庫中有沒有.obsidian的資料夾， 如果是第一次複製就選擇 NO 如國是第二次含以上就選擇Yes\n出現To avoid conflicts, the local .obsidian directory\n這是詢問是否要刪除本地的 .obsidian 資料夾， 如果是第二次含以上複製就需要選擇 Delete all your local config and plugins\n出現Specify depth of clone\n這是詢問要複製什麼樣的檔案，直接略過下一步即可。 就會將所有儲存庫的資料都複製下來\n到這裡就將儲存庫成功複製下來了!!!\n4. 作者設定 # 在 Obsidian 中必需要設定作者才能執行 Commit Pull Push。\n打開設定\n打開 Git 選項\n下滑至 Author name for commit 填入 Github 的使用者名稱\n下滑至 Author email for commit 填入 Github 的 E-mail 帳號\n5. 提交變更 Commit # 畫面下滑打開命令面板後搜尋 commit # Git: commit staged 提交預存的檔案\nGit: commit all change 提交所有更改\nGit: commit staged with specific messenger 提交預存的檔案並帶有訊息\nGit: commit all change with specific messenger 提交所有更改並帶有訊息\n6. Git pull # 1. 畫面下滑打開命令面板後搜尋 Git: Pull # 7. Git push # 1. 畫面下滑打開命令面板後搜尋 Git: Push # 第一次 Push 會出現以下視窗，輸入 Github 的用戶名即可。\n第一次 Push 會出現以下視窗，輸入 Github 的個人金鑰即可。\n7. Github 個人金鑰 # 1.登入 Github 點選右上角大頭照後選擇 Settings\n2.側邊欄進入 Developer settings\n3.側邊欄點選 Personal access tokens \u0026gt; Tokens (classic)\n4.Generate new token \u0026gt; Generate new token (classic)\n5.以下設置\n6.至頁面最下按下 Generate token\n7.之後就會獲得一組 token\n8. 後記 # 實際使用過後，有時會出現一些問題，如 Pull 他無法成功， 原因在於行動裝置版上的Obsidian的Git不是非常穩定， 作者也有提供相關論述，所以建議電腦端用VS Code，可以穩定的運行Git， 這樣才不至於資料會不見，最多只是以上步驟要重來。\n","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_setting/obsidian/obsidian_github_setting/","section":"貼文","summary":"Use Obsidian clone github repositories on the Phone and comply git_push git_pull commit.","title":"Obsidian_Github_Setting","type":"posts"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_language/python/","section":"貼文","summary":" 中滑 # ","title":"Python","type":"posts"},{"content":"","date":"30 July 2024","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"30 July 2024","externalUrl":null,"permalink":"/tags/setting/","section":"Tags","summary":"","title":"Setting","type":"tags"},{"content":"","date":"30 July 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"30 July 2024","externalUrl":null,"permalink":"/series/technology/","section":"Series","summary":"","title":"Technology","type":"series"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_setting/android_termux/","section":"貼文","summary":" 中滑 # ","title":"Termux","type":"posts"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_setting/vs_code/","section":"貼文","summary":" 中滑 # ","title":"VS Code 原始碼編輯器","type":"posts"},{"content":" 人紀 # 天紀 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/chinese/","section":"貼文","summary":" 人紀 # 天紀 # ","title":"中華文化","type":"posts"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/chinese/human_biography/","section":"貼文","summary":" 中滑 # ","title":"人紀","type":"posts"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/chinese/sky_biography/","section":"貼文","summary":" 中滑 # ","title":"天紀","type":"posts"},{"content":" Posts # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_setting/","section":"貼文","summary":" Posts # ","title":"程式設定","type":"posts"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/program_language/","section":"貼文","summary":" 中滑 # ","title":"程式語言","type":"posts"},{"content":" Posts # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/","section":"貼文","summary":" Posts # ","title":"貼文","type":"posts"},{"content":" 中滑 # ","date":"30 July 2024","externalUrl":null,"permalink":"/posts/chinese/human_biography/acupuncture_dacheng/","section":"貼文","summary":" 中滑 # ","title":"針灸大成","type":"posts"},{"content":" Use Termux clone gitgub repositories on the Android # 1. 在 Android 上安裝 Termux # 在 F-Droid 上下載 Termux 接著安裝\n![[Images/Termux.png]]\n2. Termux 存取 Android 內部儲存空間 # 開啟 Termux，依序輸入以下指令 pkg install termux-am pkg install git 當跑出 Do you want to continue? 時，輸入 Y 並按下 Enter 繼續 termux-setup-storage 這時會彈出對話窗，同意存取手機內部儲存空間 3. Github 的 Token 設定 # 登入 Github 點選右上角大頭照後選擇 Settings\n側邊欄進入 Developer settings\n側邊欄點選 Personal access tokens \u0026gt; Tokens (classic)\nGenerate new token \u0026gt; Generate new token (classic)\n以下設置\n至頁面最下按下 Generate token\n之後就會獲得一組 token（請務必牢記，可以先複製貼上到剪貼簿上，稍後會用到）\n4. 使用 Termux 進入到想存放 Vault 的位置 # 這邊以裝置內部儲存空間的 Documents 為例\n開啟 Termux，輸入以下指令\ncd ~/storage/shared/Documents 到 Github 的 Your repositories ，進入同步用 Vault 的 Repository，按下 \u0026lt;\u0026gt; Code 的按鈕，並複製 HTTPS 下的網址\n繼續輸入以下指令，使用 Git Clone 來把 Github 上的 Vault 抓取進 Android 裝置中\ngit clone https://github.com/XXX/XXX.git 上述 git clone 後面的網址請貼上剛才在 Repository 中複製的網址\n顯示 Username for 'https://github.com': 輸入自己於 Github 註冊的 Email address\n顯示 Password for 'xxxxxxxxxx': 輸入剛才於 Github 中設定的 Token（此時的輸入，游標不會有所移動是正常的，請放心及正確輸入完，或是可以用複製貼上的方式）\n當顯示 Resolving deltas: 100%, done. 或是沒有錯誤訊息時代表已經成功把 Git Repository clone 到內部儲存空間中了，也已經完成 Android 同步設定了，可以到裝置的我的檔案中去查看\n打開 Obsidian APP \u0026gt; Open folder as vault \u0026gt; 選取剛才 clone 下來的 Vault 即可\n5. 結語 # 以上步驟完成即完成了將先前同步備份到 Github 上的 Vault 同步到自己的 Android 裝置， 此時也可以進入到 Obsidian Git 的第三方外掛程式中去看看自己的備份時間設定。\n6. 額外補充 # 當不同裝置在同步時可能會遇到版本衝突 （多發生在手機跟電腦交互時的 workspace.json 跟 workspace-mobile.json 檔案上）， 可以考慮將這些在不同工作區會重新 build 的檔案加入到 .gitignore 中， 或是有一定的 Git 相關知識可以去解這些衝突， 因為有時會遇到的衝突會不太一樣， 這就交給大家有遇到的時候再去處理了。\n","date":"29 July 2024","externalUrl":null,"permalink":"/posts/program_setting/android_termux/android_termux_git_setting/","section":"貼文","summary":"Use Termux clone gitgub repositories on the Android # 1.","title":"Android_Termux_Git_Setting","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"}]